name: üîó GHA
on: [push, pull_request]

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-runner
  cancel-in-progress: true

jobs:
  # First stage: Only static checks, fast and prevent expensive builds from running.

  static-checks:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üìä Static checks
    uses: ./.github/workflows/static_checks.yml

  # Second stage: Run all the builds and some of the tests.

  android-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü§ñ Android
    needs: static-checks
    uses: ./.github/workflows/android_builds.yml

  ios-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçè iOS
    needs: static-checks
    uses: ./.github/workflows/ios_builds.yml

  linux-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üêß Linux
    needs: static-checks
    uses: ./.github/workflows/linux_builds.yml

  macos-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üçé macOS
    needs: static-checks
    uses: ./.github/workflows/macos_builds.yml

  windows-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üèÅ Windows
    needs: static-checks
    uses: ./.github/workflows/windows_builds.yml

  web-build:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: üåê Web
    needs: static-checks
    uses: ./.github/workflows/web_builds.yml

  # Third stage: Run auxiliary tests using build artifacts from previous jobs.

  # Can be turned off for PRs that intentionally break compat with godot-cpp,
  # until both the upstream PR and the matching godot-cpp changes are merged.
  godot-cpp-test:
    if: ${{ vars.DISABLE_GODOT_CI == '' }}
    name: ü™≤ Godot CPP
    # This can be changed to depend on another platform, if we decide to use it for
    # godot-cpp instead. Make sure to move the .github/actions/godot-api-dump step
    # appropriately.
    needs: linux-build
    uses: ./.github/workflows/godot_cpp_test.yml

  release:  
    if: startsWith(github.ref, 'refs/tags/groups-4.2*')
    needs:
      [
        godot-cpp-test
      ]
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Upload android-template artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-template
          asset_name: android-template
          asset_content_type: application/zip

      - name: Upload godot-api-dump artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-api-dump
          asset_name: godot-api-dump
          asset_content_type: application/zip

      - name: Upload ios-template artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ios-template
          asset_name: ios-template
          asset_content_type: application/zip

      - name: Upload linux-editor-mono artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-editor-mono
          asset_name: linux-editor-mono
          asset_content_type: application/zip

      - name: Upload linux-template-minimal artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-template-minimal
          asset_name: linux-template-minimal
          asset_content_type: application/zip

      - name: Upload linux-template-mono artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-template-mono
          asset_name: linux-template-mono
          asset_content_type: application/zip

      - name: Upload macos-editor artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-editor
          asset_name: macos-editor
          asset_content_type: application/zip

      - name: Upload macos-template artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-template
          asset_name: macos-template
          asset_content_type: application/zip

      - name: Upload web-template artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web-template
          asset_name: web-template
          asset_content_type: application/zip

      - name: Upload windows-editor artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-editor
          asset_name: windows-editor
          asset_content_type: application/zip

      - name: Upload windows-template artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.VSEKAI_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-template
          asset_name: windows-template
          asset_content_type: application/zip