# SCsub

Import("env")

module_env = env.Clone()


module_env.Prepend(CPPPATH=["source"])
module_env.Prepend(CPPPATH=["include"])

if env["platform"] == "macos" or env["platform"] == "ios":
    module_env.Append(CPPDEFINES=["DMATERIALXVIEW_METAL_BACKEND=1"])
elif env["platform"] == "linux":
    module_env.Append(CPPDEFINES=["__linux__"])

module_env.Append(CPPDEFINES=["GL_SILENCE_DEPRECATION"])

env_thirdparty = module_env.Clone()
env_thirdparty.disable_warnings()
if env["disable_exceptions"]:
    # MTLX hard-requires exceptions, so we re-enable them here.
    if env.msvc and ("_HAS_EXCEPTIONS", 0) in env_thirdparty["CPPDEFINES"]:
        env_thirdparty["CPPDEFINES"].remove(("_HAS_EXCEPTIONS", 0))
        env_thirdparty.AppendUnique(CCFLAGS=["/EHsc"])
    elif not env.msvc and "-fno-exceptions" in env_thirdparty["CCFLAGS"]:
        env_thirdparty["CCFLAGS"].remove("-fno-exceptions")
env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXCore/*.cpp")
env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXFormat/*.cpp")
env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXFormat/External/PugiXML/*.cpp")
env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXGenShader/*.cpp")
env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXGenShader/Nodes/*.cpp")
if env["platform"] == "linuxbsd":
    env.Append(LIBS=["libXt"])
    env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXRenderHw/SimpleWindowLinux.cpp")
elif env["platform"] == "macos":
    env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXRenderHw/SimpleWindowMac.cpp")
elif env["platform"] == "windows":
    env_thirdparty.add_source_files(env.modules_sources, "source/MaterialXRenderHw/SimpleWindowWindows.cpp")

module_env.add_source_files(env.modules_sources, "thirdparty/godot/*.cpp")
module_env.add_source_files(env.modules_sources, "*.cpp")
