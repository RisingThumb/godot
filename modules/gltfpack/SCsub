#!/usr/bin/env python

Import("env")
Import("env_modules")

env_gltfpack = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

thirdparty_dir = "#thirdparty/meshoptimizer/gltf/"
thirdparty_sources = [
    "animation.cpp",
    "basisenc.cpp",
    "basislib.cpp",
    "fileio.cpp",
    "gltfpack.cpp",
    "image.cpp",
    "json.cpp",
    "material.cpp",
    "mesh.cpp",
    "node.cpp",
    "parsegltf.cpp",
    "parseobj.cpp",
    "stream.cpp",
    "write.cpp",
]

thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env_gltfpack.Prepend(CPPPATH=[thirdparty_dir])

env_thirdparty = env_gltfpack.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env.modules_sources += thirdparty_obj

# Godot source files

module_obj = []

env_gltfpack.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
